/*
    Lanyrd widget. An extension on top of the Lanyrd API.
*/(function(a){"use strict",a.widgets={people:{},person:{}};var b=function(){var a=/{{\s*([a-z0-9_][\\.a-z0-9_]*)\s*}}/gi;return function(b,c){return b.replace(a,function(a,b){for(var d=b.split("."),e=d.length,f=c,h=0;h<e;h++){f=f[d[h]];if(f===void 0)throw"tim: '"+d[h]+"' not found in "+a;if(h===e-1)return f}})}}();a.widgets.people=function(c,d,e){function h(b){return e.all?a.utils.when(b.related("conference.attendees").all(),b.related("conference.trackers").all()):a.utils.when(b.related("conference.attendees").fetch(),b.related("conference.trackers").fetch())}function i(a){d&&(e.append?d.innerHTML+=a:d.innerHTML=a)}function j(c,d){var f=a.utils.deferred(),h=f.promise(),i=e.templates.attendeesHeading||'<h2 class="lanyrd-attendees-title"><a target="_blank" href={{attendees_url}}>{{amount}} attending</a></h2>',j=e.templates.trackersHeading||'<h2 class="lanyrd-trackers-title">{{amount}} tracking</h2>',k=e.templates.people||'<ul class="lanyrd-people {{people_type}}">{{list}}</ul>',l=e.templates.person||'<li><a href="{{web_url}}"><img class="lanyrd-avatar" title="{{name}} ({{username}})" src="{{avatar_url}}"></a></li>',m="",n=function(a,c){var d="",e,f=0;for(f;f<a.length;f++)e=a[f].user||a[f],d+=b(l,e);m+=b(k,{list:d,people_type:c})};return m+=b(i,{amount:c.length,attendees_url:g?g.web_url+"attendees":""}),n(c,"lanyrd-attendees"),d.length>0&&(m+=b(j,{amount:d.length}),n(d,"lanyrd-trackers")),m='<div class="lanyrd-widget"><style>.lanyrd-people, .lanyrd-people li  {padding: 0;margin: 0;}.lanyrd-people, .lanyrd-people li { overflow: hidden;}.lanyrd-people li {list-style: none;float: left;padding-right: 6px;}</style>'+m+"</div>",f.resolve(m),h}var f,g,e=e||{};return e.all=e.all||!0,e.templates||(e.templates={}),a.utils.isArray(c)&&c.length>1?(c=a.utils.map(c,function(b){return a.conference(b).fetch()}),f=a.mergeRelated(c,{related:["attendees","trackers"]}).pipe(function(a){return j(a.attendees,a.trackers).then(i)})):(c+="",f=a.conference(c).fetch().pipe(function(a){return g=a.get("conference"),a}).pipe(h).pipe(function(a,b){return j(a.get("attendees"),b.get("trackers")).then(i)})),f},a.widgets.people.topics=function(a,b,c){},a.widgets.person=function(c,d,e){function g(c){var d=a.utils.deferred(),f=d.promise(),g,h=e.template.person||'<h2><a href="{{web_url}}">{{name}}</a></h2><img class="lanyrd-avatar" title="{{name}} ({{username}})" src="{{avatar_url}}"><p>{{short_bio}}</p>';return g=b(h,c),d.resolve(g),f}var f,e=e||{};return e.templates||(e.templates={}),f=a.person(c).fetch().pipe(function(a){return a.get("user")}).pipe(function(a){return g(a).then(function(a){d&&(d.innerHTML=a)})}),f},a.widgets.person.topics=function(c,d,e){function h(c){var d=new a.utils.deferred,f=d.promise(),g=[],h="",i;a.utils.each(c,function(b,d){a.utils.each(e.ignore,function(a){d.toLowerCase()===a.toLowerCase()&&delete c[d]})}),a.utils.each(c,function(a,b){a>=e.cutoff&&g.push([b,a])}),g=g.sort(function(a,b){return b[1]-a[1]}).slice(0,e.amount),g=a.utils.map(g,function(a){return a[0]});for(i=0;i<g.length;i++)h+="<li>"+g[i]+"</li>";return d.resolve(b(e.templates.topics||'<ol class="lanyrd-widget-interests">{{topics}}</ol>',{topics:h}),c),f}var f=a.person(c),g=[],e=e||{};return e.templates||(e.templates={}),e.amount=e.amount||10,e.ignore=e.ignore||[],e.cutoff=e.cutoff||0,e.append=e.append||!1,e.events=e.events,f.fetch().pipe(function(a){if(!e.events)return a.related("user.attending").fetch()}).pipe(function(b){var c=a.utils.map(b.get("conferences_attending"),function(b){return a.resource({url:b.api_urls.conference})});return a.topics(c)}).pipe(function(a){return h(a).then(function(a){d&&(d.innerHTML=e.append?d.innerHTML+=a:a)})})},a.widgets.series=function(c,d,e){function g(c){var d=new a.utils.deferred,f=d.promise(),g="",h=new Date,i={upcoming:[],past:[]};e.amount>0&&(c=c.slice(0,e.amount)),c.length===0&&(g+="<h2>no events found for the series</h2>"),a.utils.each(c,function(a,c){new Date(a.conference.end_date+" 23:59:59")>h?i.upcoming.push(b(e.templates.upcomingConference||'<li><a href="{{web_url}}">{{name}}</a></li>',a.conference)):i.past.push(b(e.templates.pastConference||'<li><a href="{{web_url}}">{{name}}</a></li>',a.conference))});if(e.conferences.upcoming){var j=[];for(var k=i.upcoming.length-1;k>=0;k--)j.push(i.upcoming[k]);g+=b(e.templates.upcoming||'<div class="upcoming conferences"><h1>Upcoming Events</h1><ul>{{conferences}}</ul></div>',{conferences:j.join("")})}return e.conferences.past&&(g+=b(e.templates.past||'<div class="past conferences"><h1>Past Events</h1><ul>{{conferences}}</ul></div>',{conferences:i.past.join("")})),d.resolve(b(e.templates.wrapper||'<div class="lanyrd-widget-series">{{content}}</div>',{content:g}),c),f}if(!a.series)throw"Lanyrd series extension isn't loaded!";var f=a.series(c),e=e||{};return e.templates||(e.templates={}),e.conferences||(e.conferences={}),e.amount=e.amount||0,e.append=e.append||!1,e.conferences.upcoming=e.conferences.upcoming||!0,e.conferences.past=e.conferences.past||!0,f.fail(function(){console.log("JSONP Failed.")}).pipe(function(){var b=a.utils.map(arguments,function(a){return a&&a.length&&a[0].data});return g(b).then(function(a){d&&(d.innerHTML=e.append?d.innerHTML+=a:a)})})},a.widgets.series.topics=function(c,d,e){function f(c){var d=new a.utils.deferred,f=d.promise(),g=[],h="",i;a.utils.each(c,function(b,d){a.utils.each(e.ignore,function(a){d.toLowerCase()===a.toLowerCase()&&delete c[d]})}),a.utils.each(c,function(a,b){a>=e.cutoff&&g.push([b,a])}),g=g.sort(function(a,b){return b[1]-a[1]}).slice(0,e.amount),g=a.utils.map(g,function(a){return a[0]});for(i=0;i<g.length;i++)h+=b(e.templates.topic||"<li>{{topic}}</li>",{topic:g[i]});return d.resolve(b(e.templates.topics||'<ol class="lanyrd-widget-interests">{{topics}}</ol>',{topics:h}),c),f}var e=e||{};return e.templates||(e.templates={}),e.append=e.append||!1,e.amount=e.amount||10,e.ignore=e.ignore||[],e.cutoff=e.cutoff||0,a.series(c).pipe(function(){return a.utils.map(arguments,function(a){return a[0]})}).pipe(a.topics).pipe(function(a){return f(a).then(function(a){d&&(d.innerHTML=e.append?d.innerHTML+=a:a)})})}})(lanyrd);